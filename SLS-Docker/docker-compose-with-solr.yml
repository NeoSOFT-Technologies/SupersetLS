x-superset-image: &superset-image apache/superset:${TAG:-latest-dev}
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./superset-docker-utils:/app/docker
  - superset_home:/app/superset_home


version: '3.7'
services:

# =======================================================

  solr-logstash-superset-container:
    image: neosoftcoe/solr-logstash-superset-image
    container_name: solr-logstash-superset-container
    volumes:
      #**************************************************************************
      - ../sample-spring-boot-logs-generating-application/logs/:/APPLICATION-LOG/
      #**************************************************************************
    networks:
      - saas-network

# =======================================================

  solr1-container:
    image: solr:8.11.1
    container_name: solr1-container
    ports:
     - "8981:8983"
    volumes:
      - ./docker-container-data/solr1:/var/solr/data
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    networks:
      - saas-network
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  solr2-container:
    image: solr:8.11.1
    container_name: solr2-container
    ports:
     - "8982:8983"
    volumes:
      - ./docker-container-data/solr2:/var/solr/data
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    networks:
      - saas-network
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  solr3-container:
    image: solr:8.11.1
    container_name: solr3-container
    ports:
     - "8983:8983"
    volumes:
      - ./docker-container-data/solr3:/var/solr/data
    environment:
      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
    networks:
      - saas-network
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  zoo1:
    image: zookeeper:3.6.2
    container_name: zoo1
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
      - 7001:7000
    volumes:
      - ./docker-container-data/zoo1/logs:/logs
      - ./docker-container-data/zoo1/data:/data
      - ./docker-container-data/zoo1/datalog:/datalog
      - ./docker-container-data/zoo1/apache:/apache-zookeeper-3.7.0-bin
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    networks:
      - saas-network

  zoo2:
    image: zookeeper:3.6.2
    container_name: zoo2
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
      - 7002:7000
    volumes:
      - ./docker-container-data/zoo2/logs:/logs
      - ./docker-container-data/zoo2/data:/data
      - ./docker-container-data/zoo2/datalog:/datalog
      - ./docker-container-data/zoo2/apache:/apache-zookeeper-3.7.0-bin
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    networks:
      - saas-network

  zoo3:
    image: zookeeper:3.6.2
    container_name: zoo3
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
      - 7003:7000
    volumes:
      - ./docker-container-data/zoo3/logs:/logs
      - ./docker-container-data/zoo3/data:/data
      - ./docker-container-data/zoo3/datalog:/datalog
      - ./docker-container-data/zoo3/apache:/apache-zookeeper-3.7.0-bin
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    networks:
      - saas-network

# =======================================================

  redis:
    image: redis:latest
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    env_file: superset-docker-utils/.env-non-dev
    image: postgres:10
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data
    networks:
      - saas-network

  superset:
    env_file: superset-docker-utils/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    networks:
      - saas-network

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: superset-docker-utils/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - saas-network

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: superset-docker-utils/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - saas-network

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: superset-docker-utils/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - saas-network

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false

networks:
  saas-network:
    name: saas-network-external
    driver: bridge